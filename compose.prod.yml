services:
  database:
    image: postgis/postgis:13-master
    container_name: ${PROJECT_NAME}__database
    platform: linux/amd64

    ports:
      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    command: -p ${DB_PORT}

    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PWD}

    volumes:
      - ./postgres/data/database:/var/lib/postgresql/data

  directus:
    image: ${PROJECT_NAME}__directus
    container_name: ${PROJECT_NAME}__directus

    build:
      context: ./directus
      dockerfile: ./Dockerfile

    ports:
      - ${DIRECTUS_PORT}:${DIRECTUS_PORT}

    depends_on:
      - database

    environment:
      NODE_ENV: production
      PROJECT_NAME: ${PROJECT_NAME}
      SECRET: ${SECRET}
      PUBLIC_URL: ${DIRECTUS_URL}
      PORT: ${DIRECTUS_PORT}
      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PWD}
      CACHE_ENABLED: "false"
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PWD}
      DIRECTUS_ADMIN_TOKEN: ${DIRECTUS_ADMIN_TOKEN}
      CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_ANCESTORS: array:http://localhost:*,TODO,self
      CONTENT_SECURITY_POLICY_DIRECTIVES__CHILD_SRC: array:http://localhost:*,TODO,self
      CONTENT_SECURITY_POLICY_DIRECTIVES__CONNECT_SRC: "'self' http://localhost:* ws://localhost:* https:"
      CONTENT_SECURITY_POLICY_DIRECTIVES__DEFAULT_SRC: "'self' http://localhost:*"
      CONTENT_SECURITY_POLICY_DIRECTIVES__IMG_SRC: "array:'self' data: blob: http://localhost:*, i.ytimg.com 'unsafe-eval'"
      CONTENT_SECURITY_POLICY_DIRECTIVES__SCRIPT_SRC: "array:'self', player.vimeo.com 'unsafe-eval', www.youtube.com 'unsafe-eval', www.youtube.com/iframe_api 'unsafe-eval', 'unsafe-eval' http://localhost:*"
      CONTENT_SECURITY_POLICY_DIRECTIVES__STYLE_SRC: "'self' 'unsafe-inline' http://localhost:*"
      CONTENT_SECURITY_POLICY_DIRECTIVES__WORKER_SRC: "'self' blob:"
      CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC: "https://www.youtube-nocookie.com,https://player.vimeo.com"
      CONTENT_SECURITY_POLICY_DIRECTIVES__MEDIA_SRC: "array:'self', *, cdn.plyr.io"
      MARKETPLACE_TRUST: all
      CORS_ENABLED: "true"
      CORS_ORIGIN: "*"

    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/extensions:/directus/extensions
      - ./directus/templates:/directus/templates
      - ./directus/backups:/directus/backups
      - ./directus/backup.sh:/directus/backup.sh
      - ./directus/restore.sh:/directus/restore.sh
      - ./directus/template.sh:/directus/template.sh
      - ./directus/directus-sync.config.json:/directus/directus-sync.config.json
      - ./directus/directus-config:/directus/directus-config

    labels:
      # traefik with coolify needs harcoded Directus port :
      - traefik.http.services.directus.loadbalancer.server.port=8058

  nuxt:
    image: ${PROJECT_NAME}__nuxt
    container_name: ${PROJECT_NAME}__nuxt

    build:
      context: ./nuxt
      dockerfile: ./Dockerfile.prod
      # Env variables required for build time needs to be passed as args in compose and dockerfile
      args:
        NODE_ENV: production
        NUXT_URL: ${NUXT_URL}
        DIRECTUS_URL: ${DIRECTUS_URL}
        DIRECTUS_ADMIN_TOKEN: ${DIRECTUS_ADMIN_TOKEN}
        NUXT_PUBLIC_UMAMI_HOST: ${NUXT_PUBLIC_UMAMI_HOST}
        NUXT_PUBLIC_UMAMI_ID: ${NUXT_PUBLIC_UMAMI_ID}

    tmpfs: /tmp

    ports:
      - ${NUXT_PORT}:${NUXT_PORT}

    depends_on:
      - directus

    environment:
      NUXT_URL: ${NUXT_URL}
      PORT: ${NUXT_PORT}
      DIRECTUS_URL: ${DIRECTUS_URL}
      DIRECTUS_ADMIN_TOKEN: ${DIRECTUS_ADMIN_TOKEN}
